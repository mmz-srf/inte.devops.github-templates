name: Build & Test Gradle project

on:
  workflow_call:
    inputs:
      publishJar:
        type: boolean
        default: false
      createContainer:
        type: boolean
        default: false
      skipJacocoReport:
        type: boolean
        default: false
      javaVersion:
        type: number
        default: 11

jobs:
  gradle-build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      AZURE_ARTIFACTS_ENV_ACCESS_TOKEN: ${{ secrets.AZURE_ARTIFACTS_ENV_ACCESS_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      JFROG_ARTIFACT_TOKEN: ${{ secrets.JFROG_ARTIFACT_TOKEN }}

    steps:
    - name: Setup java
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ inputs.javaVersion }}
    - name: Setup gradle
      uses: gradle/gradle-build-action@v2

    - name: Checkout project sources
      uses: actions/checkout@v3

    - name: Build, test & code coverage
      if: inputs.skipJacocoReport == false
      run: ./gradlew clean build test jacocoTestReport --info
    - name: Build, test without code coverage
      if: inputs.skipJacocoReport == true
      run: ./gradlew clean build test --info

    - name: SonarQube Scan
      if: github.ref == 'refs/heads/master'
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_HOST_URL: https://sonarcloud.io
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Publish jar
      if: startsWith(github.ref, 'refs/tags/') && inputs.publishJar
      run: ./gradlew publish

    - name: Login to STXT Registry
      if: startsWith(github.ref, 'refs/tags/') && inputs.createContainer
      uses: docker/login-action@v2
      with:
        registry: registry.swisstxt.ch
        username: ${{ secrets.STXT_REGISTRY_USERNAME }}
        password: ${{ secrets.STXT_REGISTRY_TOKEN }}

    - name: Create docker container
      if: startsWith(github.ref, 'refs/tags/') && inputs.createContainer
      run: ./gradlew dockerPush
