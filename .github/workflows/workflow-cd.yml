name: Release
run-name: Release ${{ inputs.version }} on ${{ inputs.environment }}

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment'
        type: string
        default: test
      version:
        description: 'Release version'
        type: string
        required: true
      deploymentNamespace:
        type: string
        required: true
      deploymentManifestsDirectory:
        type: string
        default: "./deployment"
    secrets:
      INTE_CARGO_URL:
        required: true
      INTE_CARGO_SECRET:
        required: true
jobs:
  deploy-to-cluster:
    runs-on: srf-inte-cargo
    timeout-minutes: 10

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3

      - name: Set environment specific variables
        run: |
          if [ "test" == "${{ inputs.environment }}" ]
          then
            echo "inte-domain=inte-test.media.int" >> $GITHUB_ENV
          elif [ "prod" == "${{ inputs.environment }}" ]
          then
            echo "inte-domain=inte.media.int" >> $GITHUB_ENV
          else
            echo "Error: Unknown environment"
            exit 1
          fi

      - name: Replace token in manifest
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '#{'
          tokenSuffix: '}#'
          files: '["${{ inputs.deploymentManifestsDirectory }}/*.yaml", "${{ inputs.deploymentManifestsDirectory }}/*.yml"]'
        env:
          environment: ${{ inputs.environment }}
          version: ${{ inputs.version }}

      - name: Login to cluster with service-account
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.INTE_CARGO_URL }}
          k8s-secret: ${{ secrets.INTE_CARGO_SECRET }}

      - name: Deploy app to cluster
        run: |
          kubectl version
          kubectl -n inte-angebot get pods
          echo "Deploy app to namespace $INPUT_DEPLOYMENTNAMESPACE"
          if [[ $INPUT_DEPLOYMENTNAMESPACE ]]
          then
            echo "Deployment to one namespace"
          else
            echo "Deployment to multiple namespace"
          fi
          env | sort
        
