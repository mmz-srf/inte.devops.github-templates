name: Release
run-name: Release ${{ inputs.version }} on ${{ inputs.environment }}

on:
  workflow_call:
    inputs:
      environment:
        description: 'Deployment environment'
        type: string
        default: test
      version:
        description: 'Release version'
        type: string
        required: true
      serviceName:
        type: string
        required: true
      deploymentNamespace:
        type: string
        required: true
      enableTracing:
        type: boolean
        default: true
      deploymentManifestsDirectory:
        type: string
        default: "./deployment"
      bpmnExport:
        type: boolean
        default: false
      bpmnSourceDirectory:
        type: string
        default: "src/main/resources/bpmn"
    secrets:
      INTE_CARGO_URL:
        required: true
      INTE_CARGO_SECRET:
        required: true
jobs:
  deploy-to-cluster:
    runs-on: srf-inte-cargo
    timeout-minutes: 10

    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install -g puppeteer

      - name: Export BPMN
        id: export-bpmn
        uses: mmz-srf/inte.devops.github-actions.bpmn-exporter@main
        if: inputs.bpmnExport
        with:
          sourceDirectory: ${{ inputs.bpmnSourceDirectory }}
          targetDirectory: /data/${{ inputs.serviceName }}

      - name: Set environment specific variables
        run: |
          if [ "test" == "${{ inputs.environment }}" ]
          then
            echo "inte-domain=inte-test.media.int" >> $GITHUB_ENV
          elif [ "prod" == "${{ inputs.environment }}" ]
          then
            echo "inte-domain=inte.media.int" >> $GITHUB_ENV
          else
            echo "Error: Unknown environment"
            exit 1
          fi

      - name: Replace token in manifest
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '#{'
          tokenSuffix: '}#'
          files: '["${{ inputs.deploymentManifestsDirectory }}/*.yaml", "${{ inputs.deploymentManifestsDirectory }}/*.yml"]'
        env:
          environment: ${{ inputs.environment }}
          version: ${{ inputs.version }}
          enableTracing: ${{ inputs.enableTracing }}

      - name: Login to cluster with service-account
        uses: azure/k8s-set-context@v3
        with:
          method: service-account
          k8s-url: ${{ secrets.INTE_CARGO_URL }}
          k8s-secret: ${{ secrets.INTE_CARGO_SECRET }}

      - name: Deploy app to cluster
        uses: Azure/k8s-deploy@v4
        with:
          namespace: '${{ inputs.deploymentNamespace }}'
          action: deploy
          private-cluster: false
          skip-tls-verify: true
          manifests: |
            ${{ inputs.deploymentManifestsDirectory }}/
          images: 'registry.swisstxt.ch/srfop-proj-inte/${{ inputs.serviceName }}:${{ inputs.version }}'
